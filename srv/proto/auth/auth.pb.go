// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package go_micro_srv_auth is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	JwtRequest
	JwtResponse
*/
package go_micro_srv_auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JwtRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *JwtRequest) Reset()                    { *m = JwtRequest{} }
func (m *JwtRequest) String() string            { return proto.CompactTextString(m) }
func (*JwtRequest) ProtoMessage()               {}
func (*JwtRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *JwtRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *JwtRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type JwtResponse struct {
	Token string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *JwtResponse) Reset()                    { *m = JwtResponse{} }
func (m *JwtResponse) String() string            { return proto.CompactTextString(m) }
func (*JwtResponse) ProtoMessage()               {}
func (*JwtResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JwtResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*JwtRequest)(nil), "go.micro.srv.auth.JwtRequest")
	proto.RegisterType((*JwtResponse)(nil), "go.micro.srv.auth.JwtResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Auth service

type AuthClient interface {
	Jwt(ctx context.Context, in *JwtRequest, opts ...client.CallOption) (*JwtResponse, error)
}

type authClient struct {
	c           client.Client
	serviceName string
}

func NewAuthClient(serviceName string, c client.Client) AuthClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.auth"
	}
	return &authClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *authClient) Jwt(ctx context.Context, in *JwtRequest, opts ...client.CallOption) (*JwtResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.Jwt", in)
	out := new(JwtResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthHandler interface {
	Jwt(context.Context, *JwtRequest, *JwtResponse) error
}

func RegisterAuthHandler(s server.Server, hdlr AuthHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Auth{hdlr}, opts...))
}

type Auth struct {
	AuthHandler
}

func (h *Auth) Jwt(ctx context.Context, in *JwtRequest, out *JwtResponse) error {
	return h.AuthHandler.Jwt(ctx, in, out)
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2c, 0x2d, 0xc9,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4c, 0xcf, 0xd7, 0xcb, 0xcd, 0x4c, 0x2e, 0xca,
	0xd7, 0x2b, 0x2e, 0x2a, 0xd3, 0x03, 0x49, 0x28, 0xb9, 0x70, 0x71, 0x79, 0x95, 0x97, 0x04, 0xa5,
	0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x49, 0x71, 0x71, 0x94, 0x16, 0xa7, 0x16, 0xe5, 0x25, 0xe6,
	0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xf9, 0x20, 0xb9, 0x82, 0xc4, 0xe2, 0xe2,
	0xf2, 0xfc, 0xa2, 0x14, 0x09, 0x26, 0x88, 0x1c, 0x8c, 0xaf, 0xa4, 0xcc, 0xc5, 0x0d, 0x36, 0xa5,
	0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x84, 0x8b, 0xb5, 0x24, 0x3f, 0x3b, 0x35, 0x4f, 0x82,
	0x19, 0xac, 0x0e, 0xc2, 0x31, 0xf2, 0xe3, 0x62, 0x71, 0x2c, 0x2d, 0xc9, 0x10, 0x72, 0xe3, 0x62,
	0xf6, 0x2a, 0x2f, 0x11, 0x92, 0xd5, 0xc3, 0x70, 0x8d, 0x1e, 0xc2, 0x29, 0x52, 0x72, 0xb8, 0xa4,
	0x21, 0x76, 0x28, 0x31, 0x24, 0xb1, 0x81, 0x3d, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa6,
	0xe7, 0x45, 0x4a, 0xe2, 0x00, 0x00, 0x00,
}
